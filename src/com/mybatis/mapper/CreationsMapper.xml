<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 창작물 SQL문 작성 1차 2차 나눠질 예정 -->
<!-- SQL문 작성 , DB이름 추가 -->

<mapper namespace="creations">
   <!-- 창작물 올리기 -->
   <insert id="insert" parameterType="CreationsDTO">
      insert into creations
      (creation_number, creation_title, creation_content, category_code,
      category_name,  member_number , creation_sumnail)
      values(#{creationNumber}, #{creationTitle}, #{creationContent},
      #{creationCode}, #{creationName}, #{memberNumber}
      , #{creationSumnail})
   </insert>

   <!-- 메인페이지 창작물 조회하기 -->
   <select id="selectAll" resultType="CreationsVO" parameterType="CreationsVO">
      select creation_title,
      creation_read_count, category_code, category_name, m.member_nickname,
      m.member_pfp
      from `member` m join creations c
      on m.member_number =
      c.member_number
      order by creation_number desc
      limit 0,9
   </select>
   
   <!-- 카테고리 테마별 창작물 조회하기 -->
   <select id="selectMenu" resultType="CreationsVO" parameterType="map">
      select c.creation_number , c.creation_title , c.creation_sumnail ,
      m.member_nickname , m.member_pfp , m.member_number
      from creations c join `member` m
      on c.member_number = m.member_number and category_code = #{categoryCode}
      and category_name = #{categoryName}
      order by creation_number desc
      limit 0,9
   </select>
   
      <!-- 카테고리 테마별 창작물 조회하기 -->
   <select id="selectMenu2" resultType="CreationsVO" parameterType="map">
      		select count(cc.comment_number ) comment_count, j.* from (
			select count(l.member_number) like_count, m.member_nickname, m.member_pfp ,  c.* 
			from creations c join
			`member` m 
			on c.member_number = m.member_number
			left outer join likes l 
			on c.creation_number = l.creation_number
			where c.category_code = #{categoryCode} and c.category_name = #{categoryName}
			group by c.creation_number
			) j left outer join creations_comment cc 
			on j.creation_number = cc.creation_number 
			group by j.creation_number
			order by j.creation_number desc;
   </select>
   
   <select id="select" parameterType="_int" resultType="CreationsVO">
      select creation_number, creation_title, creation_content,
      category_code, category_name, creation_writeday, m.member_number,
      m.member_id , m.member_nickname
      from `member` m join creations c
      on
      creation_number = #{creationNumber} and m.member_number =
      c.member_number
   </select>
   
   <select id="followCount" parameterType="map" resultType="_int">
   select count(follower_number) 
	from follows f 
	where follower_number = #{followerNumber} and followee_number =#{followeeNumber};
   </select>

   <!-- 창작물 삭제 -->
   <delete id="delete" parameterType="_int">
      delete from creations
      where
      member_number = #{memberNumber}
   </delete>

   <select id="getSequence" resultType="_int">
      select last_insert_id()
   </select>

   <!-- 창작물 보기 -->
   <select id="creationContent" parameterType="_int" resultType="CreationsVO">
      select 
      c.creation_number, c.creation_title , c.creation_content , c.creation_writeday , c.category_name,
      c.creation_read_count , m.member_nickname , m.member_number , m.member_pfp
      from creations c join `member` m
      on c.member_number = m.member_number
      where c.creation_number = #{creationNumber}
   </select>

   <!-- 창작물 댓글 갯수 -->
   <select id="creationComment" parameterType="_int" resultType="_int">
      select count(creation_number)
      from creations_comment cc
      where creation_number = #{creationNumber}
   </select>

   <!-- 창작물 댓글 리스트 -->
   <select id="commentList" parameterType="_int" resultType="CreationsVO">
      select cc.comment_number, cc.comment_content, cc.comment_writedate , cc.creation_number, m.member_nickname , m.member_number , m.member_pfp 
      from creations_comment cc join `member` m
      on cc.member_number = m.member_number
      where creation_number = #{creationNumber}
   </select>

   <!-- 창작물 수정하기 -->
   <update id="creationUpdate" parameterType="creationsVO">
      update creations
      set
      creation_title=#{creationTitle}, creation_content=#{creationContent},
      category_code=#{creationCode}, category_name=#{creationName},
      creation_sumnail=#{creationSumnail}
      where
      creation_number=#{creationNumber}
   </update>

   <update id="update" parameterType="CreationsFileDTO">
      update creations
      set creation_sumnail = #{fileSystemName}
      where creation_number = #{creationNumber}
   </update>
      
     <!-- 회원탈퇴 시 창작물 삭제 -->
     <delete id="deleteMember" parameterType="_int">
        delete from creations
        where member_number = #{memberNumber}
     </delete>

   <!-- 창작물 삭제 -->
   <delete id="creationDelete" parameterType="_int">
      delete from creations
      where creation_number=#{creationNumber}
   </delete>
   
   <!-- creationRead 페이징처리 -->
   <select id="creationRead" parameterType="_int" resultType="CreationsVO">
      select category_name from creations c 
      where creation_number = #{creationNumber}
   </select>

</mapper>